plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}
//阿里路由框架配置
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {
    compileSdkVersion rootProject.AndroidApp.compileSdkVersion
    buildToolsVersion rootProject.AndroidApp.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.AndroidApp.minSdkVersion
        targetSdkVersion rootProject.AndroidApp.targetSdkVersion
        versionCode rootProject.AndroidApp.versionCode
        versionName rootProject.AndroidApp.versionName
        //MultiDex分包方法
        multiDexEnabled true
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
            } else {
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures{
        dataBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    kotlinOptions {
//        jvmTarget = "${JavaVersion.VERSION_1_7}"
//    }
    kapt {
        generateStubs = true
    }
    //防止编译的时候oom、GC
    dexOptions {
        javaMaxHeapSize "4g"
    }
    //解决.9图问题
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
    lintOptions {
        //即使有lint报错也不停止打包
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    //宿主项目中判断组件是否需要独立运行
    if (isBuildModule.toBoolean()) {
        //组件独立运行时，宿主项目直接依赖基础库，避免编译错误
        implementation project(':libs:Common_Base')
    }else{
        //壳的时候
        //TestA模块
        implementation project(':modules:ModuleTestA')
        implementation project(':modules:ModuleBrand')
        implementation project(':modules:testapplication')
        implementation project(':modules:ModuleBasis')
    }
}