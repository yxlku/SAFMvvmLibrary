apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.github.dcendents.android-maven'
group='com.github.SAFMvvmLibrary'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0"

        //MultiDex分包方法
        multiDexEnabled true
        //指定room.schemaLocation生成的文件路径
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildFeatures{
        dataBinding = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        /**
         * 建议提测用这个构建类型，并使用 BuildConfig.BUILD_TYPE 判断是否等于 beta，作为
         * 开启动态修改 Url，动态打开日志等功能的标记。
         */
        beta {
            initWith release
        }

    }

}

dependencies {
    api fileTree(dir: "libs", include: ["*.jar"])
    // 这两个是创建项目默认就有的库
    api "org.jetbrains.kotlin:kotlin-stdlib:1.4.20"
    api "androidx.core:core-ktx:1.3.2"
    api "androidx.startup:startup-runtime:1.0.0"
    // 兼容库
    api "androidx.appcompat:appcompat:1.2.0"
    // 约束布局
    api "androidx.constraintlayout:constraintlayout:2.0.4"
    // RecycylerView
    api "androidx.recyclerview:recyclerview:1.1.0"
    // material
//    api "com.google.androistartupd.material:material:1.2.0"
    api "com.google.android.material:material:1.2.0"

    // 以下三个是为了使用最新的特性
    api 'androidx.activity:activity:1.2.0-alpha07'
    api 'androidx.activity:activity-ktx:1.2.0-alpha07'
    api 'androidx.fragment:fragment:1.3.0-alpha07'

    // 在 Lifecycles 中使用协程，视图销毁则自动取消
    api "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
    // 在 LiveData 中使用协程
    api "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    // 监控应用的生命周期
    api "androidx.lifecycle:lifecycle-process:2.2.0"
    // 简化 Fragment 的 API 调用，同时通过 viewModels 扩展方法创建 vm 来的非常容易
    api 'androidx.fragment:fragment-ktx:1.3.0-alpha07'
    // 使用 Java8 替换 lifecycleCompiler，让 vm 可以感知 v 生命周期
    api "androidx.lifecycle:lifecycle-common-java8:2.2.0"

    // 内嵌的加载中库
    api 'com.github.Zhao-Yan-Yan:MultiStatePage:1.0.9'

    // 数据库
    api "androidx.room:room-runtime:2.2.5"
    api "androidx.room:room-ktx:2.2.5"

    //相机
    api "androidx.camera:camera-core:1.0.0-beta03"
    api "androidx.camera:camera-camera2:1.0.0-beta12"
//    api Deps.cameraLifecycle
    //图片选择
    api "com.github.LuckSiege.PictureSelector:picture_library:v2.6.0"
    //文件选择器
    api "com.github.ZLYang110:FileSelector:2.0.0"

    // 网络，默认使用 gson 解析 json
    api "com.squareup.retrofit2:retrofit:2.9.0"
    api "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    api "com.github.ihsanbal:LoggingInterceptor:3.1.0"
    api "com.google.code.gson:gson:2.8.6"
    api "com.squareup.retrofit2:converter-gson:2.7.2"

    // 图片，使用 glide
    api "com.github.bumptech.glide:glide:4.11.0"
    //圆角图片
    api 'com.github.xiaofeidev:round:1.1.1'

    // 权限申请
    api "com.hjq:xxpermissions:9.5"

    //日志
    api "com.orhanobut:logger:2.2.0"

    //mmkv 性能比sp好，替代sp
    api "com.tencent:mmkv-static:1.2.5"

    //事件总线
    api "com.jeremyliao:live-event-bus-x:1.7.2"

    //通用弹窗
    api "com.lxj:xpopup:2.2.13"
    api "com.lxj:xpopup-ext:0.0.3" //城市
    api "com.github.loperSeven:DateTimePicker:0.2.3" //时间选择



    //Adobe动画库
    api "com.airbnb.android:lottie:3.5.0"
    //下载库
    api "com.gitee.jiang_li_jie_j:awesome-downloader:v1.1.1"
    //更新库
    api "com.github.maning0303:MNUpdateAPK:V2.0.3"
    //进度条
    api "com.liulishuo.magicprogresswidget:library:1.1.1"
    api "cn.dreamtobe.percentsmoothhandler:library:0.1.1"
    //屏幕适配
    api "me.jessyan:autosize:1.2.1"
    //沉浸式状态栏
    api "com.gyf.immersionbar:immersionbar:3.0.0"
    api "com.gyf.immersionbar:immersionbar-ktx:3.0.0"
    //侧滑关闭
    api "com.billy.android:smart-swipe:1.1.2"
    //刷新库
    api "com.scwang.smart:refresh-layout-kernel:2.0.1"
    api "com.scwang.smart:refresh-header-classics:2.0.1"
    api "com.scwang.smart:refresh-footer-classics:2.0.1"
    //圆角气泡view
    api 'com.github.xujiaji:happy-bubble:1.2.3'
    //列表库
    api "com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4"
    //列表分割线
    api"com.github.fondesa:recycler-view-divider:3.3.0"


    //组件中依赖阿里路由编译框架
    api "com.alibaba:arouter-api:1.5.1"
    // debug 阶段内存泄露检测
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'
    // debug log弹窗
//    debugImplementation Deps.appLogcat

}

// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set("sources")
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}