if (isBuildModule.toBoolean()) {
    //作为独立App应用运行
    apply plugin: 'com.android.application'
} else {
    //作为组件运行
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
//阿里路由框架配置
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {
    compileSdkVersion rootProject.ext.AndroidApp.compileSdkVersion
    buildToolsVersion rootProject.ext.AndroidApp.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.AndroidApp.minSdkVersion
        targetSdkVersion rootProject.ext.AndroidApp.targetSdkVersion
        versionCode rootProject.ext.AndroidApp.versionCode
        versionName rootProject.ext.AndroidApp.versionName
        //MultiDex分包方法
        multiDexEnabled true
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
                //独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除alone文件夹下所有调试文件
                    exclude 'src/main/alone/*'
                }
            }
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures{
        dataBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "${JavaVersion.VERSION_1_8}"
    }
    kapt {
        generateStubs = true
    }
    //防止编译的时候oom、GC
    dexOptions {
        javaMaxHeapSize "4g"
    }
    //解决.9图问题
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
    lintOptions {
        //即使有lint报错也不停止打包
        checkReleaseBuilds false
        abortOnError false
    }
    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')
        //组件依赖基础库
        api project(':libs:Common_Base')

        //组件中依赖阿里路由编译框架
        kapt rootProject.ext.dependencies["arouter-compiler"]
        //room
        kapt "androidx.room:room-compiler:2.2.5"

        kapt  "com.android.databinding:compiler:4.1.1"
    }
}


